plugins {
    id 'java'
    id 'idea'
}

version '4.0.0'

ext {
    vertxVersion = "4.0.0"
}

jar {
    // by default fat jar
    archiveName = 'vertx-blueprint-todo-backend-fat.jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': 'io.vertx.blueprint.todolist.verticle.RxTodoVerticle'
    }
}

repositories {
    jcenter()
}


def generatedSourcesDir = file('src/generated/java')
sourceSets {
    generated {
        java.srcDir "${projectDir}/src/generated/java"
    }
    main {
        java {
            srcDirs += generatedSourcesDir
        }
    }
}


//idea {
//    module {
//        sourceDirs += generatedSourcesDir
//        generatedSourceDirs += generatedSourcesDir
//    }
//}

task generateProxies(type: JavaCompile) {
    group = 'build'
    description = 'Generates the Vert.x proxies'
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly + configurations.annotationProcessor
    options.annotationProcessorPath = configurations.annotationProcessor
    destinationDir = generatedSourcesDir
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-Acodegen.output=${destinationDir.absolutePath}"
    ]
}

compileJava {
    dependsOn generateProxies
    source += sourceSets.generated.java
    options.compilerArgs += '-proc:none'
}

clean {
    delete += sourceSets.generated.java.srcDirs
}

dependencies {
    annotationProcessor("io.vertx:vertx-codegen:${vertxVersion}")
    annotationProcessor("io.vertx:vertx-service-proxy:${vertxVersion}")
    compileOnly("io.vertx:vertx-codegen:${vertxVersion}")
    compile("io.vertx:vertx-core:${vertxVersion}")
    compile("io.vertx:vertx-rx-java2:${vertxVersion}")
    compile("io.vertx:vertx-web:${vertxVersion}")
    compile("io.vertx:vertx-jdbc-client:${vertxVersion}")
    compile("io.vertx:vertx-redis-client:${vertxVersion}")
//    Mapping io.vertx.blueprint.todolist.entity.is not available without Jackson Databind on the classpath
//    at io.vertx.core.json.Json.encodePrettily(Json.java:75)
//    at io.vertx.blueprint.todolist.service.RedisTodoService.insert(RedisTodoService.java:52)
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.1")
    compile 'mysql:mysql-connector-java:8.0.22'


    testCompile("io.vertx:vertx-unit:${vertxVersion}")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}